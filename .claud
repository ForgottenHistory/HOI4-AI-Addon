## Approach
- **ONE SMALL STEP AT A TIME** - Implement minimal working piece first
- **STOP AND WAIT** - Let me test before continuing
- Break complex tasks into tiny, testable increments
- I'm experienced with programming but may need guidance on specific technologies

## File Management
- **Always specify file paths** outside code artifacts
- **Clearly indicate**: ADD, REPLACE, REMOVE, or NEW FILE
- Keep files modular and under 300 lines
- Use artifacts for easy copy-paste

## Response Format
1. File path (outside artifact)
2. Action type
3. Code in artifact
4. **STOP HERE** - Ask before next step

## Code Standards
- Single Responsibility: Each file has clear, focused purpose
- Easy to Extend: Simple to add new features/settings
- Type Safety: Proper validation and error handling
- Consistent patterns throughout
- Avoid tight coupling as much as possible. Create independent systems.

**IMPORTANT**: Keep responses short. A couple file change per response maximum.
**IMPORTANT**: Have good separation of concerns and smaller, focused files. I use AI to develop, so output and context length is important.